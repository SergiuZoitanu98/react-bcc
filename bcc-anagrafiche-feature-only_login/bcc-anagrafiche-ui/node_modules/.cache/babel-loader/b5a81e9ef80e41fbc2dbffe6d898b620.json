{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Gigabyte\\\\Desktop\\\\react-bcc\\\\react-bcc\\\\bcc-anagrafiche-feature-only_login\\\\bcc-anagrafiche-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gigabyte\\\\Desktop\\\\react-bcc\\\\react-bcc\\\\bcc-anagrafiche-feature-only_login\\\\bcc-anagrafiche-ui\\\\src\\\\anagrafica_components\\\\RicercaClienti.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Navbar from \"./common/Navbar\";\nimport axios from \"axios\";\nimport UserTable from \"./userTable\";\nimport UserForm from \"./userForm\";\nimport config from \"../config.json\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast } from \"react-toastify\";\nexport class RicercaClienti extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalDetailsVisible: false,\n      modalDetailsUncofirmed: false,\n      confirmCheckModalShow: false,\n      modalAlreadyConfirmed: false,\n      modalUnconfirmed: false,\n      clients: [],\n      selectedClient: null,\n      checked: false,\n      filiali: [],\n      show: false\n    };\n\n    this.formatDate = date => {\n      var d = new Date(date),\n          month = \"\" + (d.getMonth() + 1),\n          day = \"\" + d.getDate(),\n          year = d.getFullYear();\n      if (month.length < 2) month = \"0\" + month;\n      if (day.length < 2) day = \"0\" + day;\n      return [year, month, day].join(\"-\");\n    };\n\n    this.handleRicerca = data => {\n      const jwt = localStorage.getItem(\"TOKEN\");\n      const conf = {\n        headers: {\n          Authorization: \"Bearer \" + jwt\n        },\n        params: data\n      };\n      axios.get(config.apiClienteEndpoint, conf).then(response => {\n        for (let i = 0; i < response.data.length; i++) {\n          let date = new response.data[i].filiali.lastModify();\n          response.data[i].filiali.lastModify = date.getDay() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear();\n        }\n\n        for (let i = 0; i < response.data.length; i++) {\n          let date2 = new Date(response.data[i].dataNascita);\n          response.data[i].dataNascita = date2.toLocaleDateString();\n        }\n\n        this.setState({\n          clients: []\n        });\n        this.setState({\n          clients: response.data\n        });\n      }).catch(error => {\n        // handle error\n        toast.error(\"Nessuna corrispondenza trovata\");\n      });\n    };\n\n    this.handleModalDetailsUncofirmed = () => {\n      this.setState({\n        modalDetailsUncofirmed: !this.state.modalDetailsUncofirmed\n      });\n    };\n\n    this.handleDetailsModalVisible = () => {\n      this.setState({\n        modalDetailsVisible: !this.state.modalDetailsVisible\n      });\n    };\n\n    this.handleUnconfirmed = () => {\n      this.setState({\n        modalAlreadyConfirmed: this.state.modalAlreadyConfirmed\n      });\n    };\n\n    this.handleModalAlreadyConfirmed = () => {\n      this.setState({\n        modalAlreadyConfirmed: !this.state.modalAlreadyConfirmed\n      });\n    };\n\n    this.handleModalUnconfirmed = () => {\n      this.setState({\n        modalUnconfirmed: !this.state.modalUnconfirmed\n      });\n    };\n\n    this.checkClient = client => {\n      this.setState({\n        selectedClient: client\n      });\n\n      if (client.confermato) {\n        this.setState({\n          modalAlreadyConfirmed: true\n        });\n      } else {\n        this.setState({\n          modalUnconfirmed: true\n        });\n      }\n\n      console.log(client);\n    };\n\n    this.handleChange = (input, isCheckbox) => {\n      const client = _objectSpread({}, this.state.selectedClient);\n\n      if (isCheckbox) {\n        client[input.name] = input.checked;\n      } else {\n        client[input.name] = input.value;\n      }\n    };\n\n    this.handleConfirmCheckModal = () => {\n      this.setState({\n        confirmCheckModalShow: !this.state.confirmCheckModalShow\n      });\n    };\n\n    this.displayMessage = () => {\n      toast.success(\"Cliente confermato\");\n    };\n\n    this.hideButtons = () => {\n      var x = document.getElementById(\"myDiv\");\n\n      if (x.style.display === \"none\") {\n        x.style.display = \"block\";\n      } else {\n        x.style.display = \"none\";\n      }\n    };\n\n    this.handleConfirm = () => {\n      axios.post(config.apiPostCliente, {\n        id: this.state.selectedClient.id,\n        telefono: !!this.state.selectedClient.telefono,\n        email: !!this.state.selectedClient.email,\n        p1: this.state.selectedClient.p1,\n        p2: this.state.selectedClient.p1,\n        p3: this.state.selectedClient.p3,\n        p4: this.state.selectedClient.p4,\n        p5: this.state.selectedClient.p5,\n        p6: this.state.selectedClient.p6,\n        firma: this.state.selectedClient.firma\n      }, {\n        headers: {\n          Authorization: localStorage.getItem(\"TOKEN\")\n        }\n      }).then(response => {}).catch(error => {\n        // handle error\n        toast(\"something unexpected happened\");\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"text-left pt-2 pl-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"RICERCA CLIENTI\"), React.createElement(UserForm, {\n      handleRicerca: this.handleRicerca,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), this.state.clients.length > 0 && React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(UserTable, {\n      checkClient: this.checkClient,\n      clients: this.state.clients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      show: this.state.modalAlreadyConfirmed,\n      onHide: this.handleModalAlreadyConfirmed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \" \", this.state.selectedClient && this.state.selectedClient.nome)), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"L'anagrafica del cliente \\xE8 stata confermata in data:\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, this.state.selectedClient && this.state.selectedClient.lastModify)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Il codice identificativo assegnato \\xE8:\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \" \", this.state.selectedClient && this.state.selectedClient.codice))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleModalAlreadyConfirmed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Chiudi\"))), React.createElement(Modal, {\n      show: this.state.modalUnconfirmed,\n      onHide: this.handleModalUnconfirmed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, this.state.selectedClient && React.createElement(\"form\", {\n      onSubmit: this.handleConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \" \", this.state.selectedClient.nome), React.createElement(\"h4\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Campi modificabili\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"NAG\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, this.state.selectedClient.nag), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Nome di battesimo\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \" \", this.state.selectedClient.nome), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Data di nascita\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \" \", this.state.selectedClient.dataNascita), React.createElement(\"div\", {\n      className: \"form-check form-check-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input \",\n      type: \"checkbox\",\n      id: \"telefono\",\n      name: \"telefono\",\n      onChange: e => {\n        this.handleChange(e.currentTarget, true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"telefono\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Numero di telefono\"), this.state.selectedClient.telefono)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-check form-check-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      id: \"email\",\n      name: \"email\",\n      onChange: e => {\n        this.handleChange(e.currentTarget, true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Email\"), this.state.selectedClient.email)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Privacy\"), [1, 2, 3, 4, 5, 6].map(privacyNumber => {\n      return React.createElement(\"div\", {\n        key: privacyNumber,\n        className: \"form-check form-check-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        id: \"id-\".concat(privacyNumber),\n        name: \"p\".concat(privacyNumber),\n        onChange: e => {\n          this.handleChange(e.currentTarget, true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"id-\" + privacyNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Privacy \", privacyNumber, \" -\", \" \", this.state.selectedClient[\"p\".concat(privacyNumber)] ? React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      })));\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-check form-check-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input \",\n      type: \"checkbox\",\n      id: \"firma\",\n      name: \"firma\",\n      onChange: e => {\n        this.handleChange(e.currentTarget, true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"firma\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Firma\"), this.state.selectedClient.firma ? React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: \"fa fa-times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }))))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"myDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"mr-2\",\n      variant: \"success\",\n      onClick: e => {\n        this.handleConfirmCheckModal();\n        this.hideButtons();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Conferma\"), React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleModalUnconfirmed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Chiudi\")), this.state.confirmCheckModalShow ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Sicuro di voler confermare?\", React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary btn-sm ml-2\",\n      onClick: e => {\n        this.handleConfirmCheckModal();\n        this.handleModalUnconfirmed();\n        this.handleModalAlreadyConfirmed();\n        this.handleConfirm();\n        this.displayMessage();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Si\"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-secondary btn-sm ml-2\",\n      onClick: e => {\n        this.handleConfirmCheckModal();\n        this.hideButtons();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"No\")) : \"\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Gigabyte\\Desktop\\react-bcc\\react-bcc\\bcc-anagrafiche-feature-only_login\\bcc-anagrafiche-ui\\src\\anagrafica_components\\RicercaClienti.jsx"],"names":["React","Component","Modal","Button","Navbar","axios","UserTable","UserForm","config","ToastContainer","toast","RicercaClienti","state","modalDetailsVisible","modalDetailsUncofirmed","confirmCheckModalShow","modalAlreadyConfirmed","modalUnconfirmed","clients","selectedClient","checked","filiali","show","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","handleRicerca","data","jwt","localStorage","getItem","conf","headers","Authorization","params","get","apiClienteEndpoint","then","response","i","lastModify","getDay","date2","dataNascita","toLocaleDateString","setState","catch","error","handleModalDetailsUncofirmed","handleDetailsModalVisible","handleUnconfirmed","handleModalAlreadyConfirmed","handleModalUnconfirmed","checkClient","client","confermato","console","log","handleChange","input","isCheckbox","name","value","handleConfirmCheckModal","displayMessage","success","hideButtons","x","document","getElementById","style","display","handleConfirm","post","apiPostCliente","id","telefono","email","p1","p2","p3","p4","p5","p6","firma","render","nome","codice","nag","e","currentTarget","map","privacyNumber"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport Navbar from \"./common/Navbar\";\r\nimport axios from \"axios\";\r\nimport UserTable from \"./userTable\";\r\nimport UserForm from \"./userForm\";\r\nimport config from \"../config.json\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nexport class RicercaClienti extends Component {\r\n  state = {\r\n    modalDetailsVisible: false,\r\n    modalDetailsUncofirmed: false,\r\n    confirmCheckModalShow: false,\r\n    modalAlreadyConfirmed: false,\r\n    modalUnconfirmed: false,\r\n    clients: [],\r\n    selectedClient: null,\r\n    checked: false,\r\n    filiali: [],\r\n    show: false,\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  };\r\n  handleRicerca = (data) => {\r\n    const jwt = localStorage.getItem(\"TOKEN\");\r\n    const conf = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      params: data,\r\n    };\r\n    axios\r\n      .get(config.apiClienteEndpoint, conf)\r\n      .then((response) => {\r\n        for (let i = 0; i < response.data.length; i++) {\r\n          let date = new response.data[i].filiali.lastModify();\r\n          response.data[i].filiali.lastModify =\r\n            date.getDay() +\r\n            \"-\" +\r\n            (date.getMonth() + 1) +\r\n            \"-\" +\r\n            date.getFullYear();\r\n        }\r\n        for (let i = 0; i < response.data.length; i++) {\r\n          let date2 = new Date(response.data[i].dataNascita);\r\n          response.data[i].dataNascita = date2.toLocaleDateString();\r\n        }\r\n\r\n        this.setState({ clients: [] });\r\n        this.setState({ clients: response.data });\r\n      })\r\n      .catch((error) => {\r\n        // handle error\r\n        toast.error(\"Nessuna corrispondenza trovata\");\r\n      });\r\n  };\r\n\r\n  handleModalDetailsUncofirmed = () => {\r\n    this.setState({\r\n      modalDetailsUncofirmed: !this.state.modalDetailsUncofirmed,\r\n    });\r\n  };\r\n\r\n  handleDetailsModalVisible = () => {\r\n    this.setState({ modalDetailsVisible: !this.state.modalDetailsVisible });\r\n  };\r\n\r\n  handleUnconfirmed = () => {\r\n    this.setState({ modalAlreadyConfirmed: this.state.modalAlreadyConfirmed });\r\n  };\r\n\r\n  handleModalAlreadyConfirmed = () => {\r\n    this.setState({ modalAlreadyConfirmed: !this.state.modalAlreadyConfirmed });\r\n  };\r\n\r\n  handleModalUnconfirmed = () => {\r\n    this.setState({ modalUnconfirmed: !this.state.modalUnconfirmed });\r\n  };\r\n\r\n  checkClient = (client) => {\r\n    this.setState({ selectedClient: client });\r\n    if (client.confermato) {\r\n      this.setState({ modalAlreadyConfirmed: true });\r\n    } else {\r\n      this.setState({ modalUnconfirmed: true });\r\n    }\r\n    console.log(client);\r\n  };\r\n\r\n  handleChange = (input, isCheckbox) => {\r\n    const client = { ...this.state.selectedClient };\r\n\r\n    if (isCheckbox) {\r\n      client[input.name] = input.checked;\r\n    } else {\r\n      client[input.name] = input.value;\r\n    }\r\n  };\r\n\r\n  handleConfirmCheckModal = () => {\r\n    this.setState({ confirmCheckModalShow: !this.state.confirmCheckModalShow });\r\n  };\r\n  displayMessage = () => {\r\n    toast.success(\"Cliente confermato\");\r\n  };\r\n\r\n  hideButtons = () => {\r\n    var x = document.getElementById(\"myDiv\");\r\n    if (x.style.display === \"none\") {\r\n      x.style.display = \"block\";\r\n    } else {\r\n      x.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  handleConfirm = () => {\r\n    axios\r\n      .post(\r\n        config.apiPostCliente,\r\n\r\n        {\r\n          id: this.state.selectedClient.id,\r\n          telefono: !!this.state.selectedClient.telefono,\r\n          email: !!this.state.selectedClient.email,\r\n          p1: this.state.selectedClient.p1,\r\n          p2: this.state.selectedClient.p1,\r\n          p3: this.state.selectedClient.p3,\r\n          p4: this.state.selectedClient.p4,\r\n          p5: this.state.selectedClient.p5,\r\n          p6: this.state.selectedClient.p6,\r\n          firma: this.state.selectedClient.firma,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"TOKEN\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {})\r\n      .catch((error) => {\r\n        // handle error\r\n        toast(\"something unexpected happened\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div id=\"main\">\r\n          <Navbar></Navbar>\r\n          <h3 className=\"text-left pt-2 pl-2\">RICERCA CLIENTI</h3>\r\n          <UserForm handleRicerca={this.handleRicerca} />\r\n\r\n          {this.state.clients.length > 0 && (\r\n            <div className=\"row\">\r\n              <UserTable\r\n                checkClient={this.checkClient}\r\n                clients={this.state.clients}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <Modal\r\n            show={this.state.modalAlreadyConfirmed}\r\n            onHide={this.handleModalAlreadyConfirmed}\r\n          >\r\n            <Modal.Header>\r\n              <h3>\r\n                {\" \"}\r\n                {this.state.selectedClient && this.state.selectedClient.nome}\r\n              </h3>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              {\" \"}\r\n              <p>\r\n                L'anagrafica del cliente è stata confermata in data:\r\n                <b>\r\n                  {this.state.selectedClient &&\r\n                    this.state.selectedClient.lastModify}\r\n                </b>\r\n              </p>\r\n              <p>\r\n                Il codice identificativo assegnato è:\r\n                <b>\r\n                  {\" \"}\r\n                  {this.state.selectedClient &&\r\n                    this.state.selectedClient.codice}\r\n                </b>\r\n              </p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={this.handleModalAlreadyConfirmed}\r\n              >\r\n                Chiudi\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          {/*unconfirmed*/}\r\n\r\n          <Modal\r\n            show={this.state.modalUnconfirmed}\r\n            onHide={this.handleModalUnconfirmed}\r\n          >\r\n            <Modal.Body>\r\n              <div className=\"row\">\r\n                {this.state.selectedClient && (\r\n                  <form onSubmit={this.handleConfirm}>\r\n                    <div className=\"container-fluid\">\r\n                      <p> {this.state.selectedClient.nome}</p>\r\n                      <h4 className=\"float-right\">Campi modificabili</h4>\r\n                      <hr />\r\n                      <h5>NAG</h5>\r\n                      <p>{this.state.selectedClient.nag}</p>\r\n                      <h5>Nome di battesimo</h5>\r\n                      <p> {this.state.selectedClient.nome}</p>\r\n                      <h5>Data di nascita</h5>\r\n                      <p> {this.state.selectedClient.dataNascita}</p>\r\n\r\n                      <div className=\"form-check form-check-wrapper\">\r\n                        <input\r\n                          className=\"form-check-input \"\r\n                          type=\"checkbox\"\r\n                          id=\"telefono\"\r\n                          name=\"telefono\"\r\n                          onChange={(e) => {\r\n                            this.handleChange(e.currentTarget, true);\r\n                          }}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"telefono\">\r\n                          <h5>Numero di telefono</h5>\r\n                          {this.state.selectedClient.telefono}\r\n                        </label>\r\n                      </div>\r\n                      <br />\r\n                      <div className=\"form-check form-check-wrapper\">\r\n                        <input\r\n                          className=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          onChange={(e) => {\r\n                            this.handleChange(e.currentTarget, true);\r\n                          }}\r\n                        />\r\n\r\n                        <label className=\"form-check-label\" htmlFor=\"email\">\r\n                          <h5>Email</h5>\r\n                          {this.state.selectedClient.email}\r\n                        </label>\r\n                      </div>\r\n                      <br />\r\n                      <h5>Privacy</h5>\r\n                      {[1, 2, 3, 4, 5, 6].map((privacyNumber) => {\r\n                        return (\r\n                          <div\r\n                            key={privacyNumber}\r\n                            className=\"form-check form-check-wrapper\"\r\n                          >\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              id={`id-${privacyNumber}`}\r\n                              name={`p${privacyNumber}`}\r\n                              onChange={(e) => {\r\n                                this.handleChange(e.currentTarget, true);\r\n                              }}\r\n                            />\r\n\r\n                            <label\r\n                              className=\"form-check-label\"\r\n                              htmlFor={\"id-\" + privacyNumber}\r\n                            >\r\n                              Privacy {privacyNumber} -{\" \"}\r\n                              {this.state.selectedClient[\r\n                                `p${privacyNumber}`\r\n                              ] ? (\r\n                                <i className=\"fa fa-check\"></i>\r\n                              ) : (\r\n                                <i className=\"fa fa-times\"></i>\r\n                              )}\r\n                            </label>\r\n                          </div>\r\n                        );\r\n                      })}\r\n\r\n                      <br />\r\n                      <div className=\"form-check form-check-wrapper\">\r\n                        <input\r\n                          className=\"form-check-input \"\r\n                          type=\"checkbox\"\r\n                          id=\"firma\"\r\n                          name=\"firma\"\r\n                          onChange={(e) => {\r\n                            this.handleChange(e.currentTarget, true);\r\n                          }}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"firma\">\r\n                          <h5>Firma</h5>\r\n                          {this.state.selectedClient.firma ? (\r\n                            <i className=\"fa fa-check\"></i>\r\n                          ) : (\r\n                            <i className=\"fa fa-times\"></i>\r\n                          )}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                )}\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <div id=\"myDiv\">\r\n                <Button\r\n                  className=\"mr-2\"\r\n                  variant=\"success\"\r\n                  onClick={(e) => {\r\n                    this.handleConfirmCheckModal();\r\n                    this.hideButtons();\r\n                  }}\r\n                >\r\n                  Conferma\r\n                </Button>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={this.handleModalUnconfirmed}\r\n                >\r\n                  Chiudi\r\n                </Button>\r\n              </div>\r\n              {this.state.confirmCheckModalShow ? (\r\n                <div>\r\n                  Sicuro di voler confermare?\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary btn-sm ml-2\"\r\n                    onClick={(e) => {\r\n                      this.handleConfirmCheckModal();\r\n                      this.handleModalUnconfirmed();\r\n                      this.handleModalAlreadyConfirmed();\r\n                      this.handleConfirm();\r\n                      this.displayMessage();\r\n                    }}\r\n                  >\r\n                    Si\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-secondary btn-sm ml-2\"\r\n                    onClick={(e) => {\r\n                      this.handleConfirmCheckModal();\r\n                      this.hideButtons();\r\n                    }}\r\n                  >\r\n                    No\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}