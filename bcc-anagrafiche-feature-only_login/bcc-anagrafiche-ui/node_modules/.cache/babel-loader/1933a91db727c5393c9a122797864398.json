{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Gigabyte\\\\Desktop\\\\react-bcc\\\\react-bcc\\\\bcc-anagrafiche-feature-only_login\\\\bcc-anagrafiche-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gigabyte\\\\Desktop\\\\react-bcc\\\\react-bcc\\\\bcc-anagrafiche-feature-only_login\\\\bcc-anagrafiche-ui\\\\src\\\\anagrafica_components\\\\RicercaClienti.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Navbar from \"./common/Navbar\";\nimport axios from \"axios\";\nimport UserTable from \"./userTable\";\nimport UserForm from \"./userForm\";\nimport UnconfirmedModalBody from \"./unconfiremdModalBody\";\nimport config from \"../config.json\";\nexport class RicercaClienti extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalDetailsVisible: false,\n      modalDetailsUncofirmed: false,\n      confirmCheckModalShow: false,\n      modalAlreadyConfirmed: false,\n      modalUnconfirmed: false,\n      clients: [],\n      selectedClient: null,\n      checked: false,\n      filiali: []\n    };\n\n    this.handleRicerca = data => {\n      const jwt = localStorage.getItem(\"TOKEN\");\n      const conf = {\n        headers: {\n          Authorization: \"Bearer \" + jwt\n        },\n        params: data\n      };\n      axios.get(config.apiClienteEndpoint, conf).then(response => {\n        var date = new Date(response.data[0].filiali.lastModify);\n        response.data[0].filiali.lastModify = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate(); //da togliere stati duplicati\n\n        this.setState({\n          clients: []\n        });\n        this.setState({\n          clients: response.data\n        });\n        console.log(this.state.clients);\n      }).catch(error => {\n        // handle error\n        console.log(error);\n      });\n    };\n\n    this.handleModalDetailsUncofirmed = () => {\n      this.setState({\n        modalDetailsUncofirmed: !this.state.modalDetailsUncofirmed\n      });\n    };\n\n    this.handleDetailsModalVisible = () => {\n      this.setState({\n        modalDetailsVisible: !this.state.modalDetailsVisible\n      });\n    };\n\n    this.handleUnconfirmed = () => {\n      this.setState({\n        modalAlreadyConfirmed: this.state.modalAlreadyConfirmed\n      });\n    };\n\n    this.handleModalAlreadyConfirmed = () => {\n      this.setState({\n        modalAlreadyConfirmed: !this.state.modalAlreadyConfirmed\n      });\n    };\n\n    this.handleModalUnconfirmed = () => {\n      this.setState({\n        modalUnconfirmed: !this.state.modalUnconfirmed\n      });\n    };\n\n    this.checkClient = client => {\n      this.setState({\n        selectedClient: client\n      });\n\n      if (client.confermato) {\n        this.setState({\n          modalAlreadyConfirmed: true\n        });\n      } else {\n        this.setState({\n          modalUnconfirmed: true\n        });\n      }\n    };\n\n    this.handleChange = (input, isCheckbox) => {\n      const client = _objectSpread({}, this.state.selectedClient);\n\n      console.log(input.name);\n\n      if (isCheckbox) {\n        client[input.name] = input.checked;\n      } else {\n        client[input.name] = input.value;\n      }\n\n      console.log(client);\n      this.setState({\n        selectedClient: client\n      });\n    };\n\n    this.handleConfirmCheckModal = () => {\n      this.setState({\n        confirmCheckModalShow: !this.state.confirmCheckModalShow\n      });\n    };\n\n    this.handleConfirm = () => {\n      axios.post(config.apiPostCliente, {\n        id: this.state.selectedClient.id,\n        telefono: this.state.selectedClient.telefono,\n        email: this.state.selectedClient.email,\n        p1: this.state.selectedClient.p1,\n        p2: this.state.selectedClient.p1,\n        p3: this.state.selectedClient.p3,\n        p4: this.state.selectedClient.p4,\n        p5: this.state.selectedClient.p5,\n        p6: this.state.selectedClient.p6,\n        firma: this.state.selectedClient.firma\n      }, {\n        headers: {\n          Authorization: localStorage.getItem(\"TOKEN\")\n        }\n      }).then(response => {}).catch(error => {\n        // handle error\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \" mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"RICERCA CLIENTI\"), React.createElement(UserForm, {\n      handleRicerca: this.handleRicerca,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), this.state.clients.length > 0 && React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(UserTable, {\n      checkClient: this.checkClient,\n      clients: this.state.clients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      show: this.state.modalAlreadyConfirmed,\n      onHide: this.handleModalAlreadyConfirmed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Attenzione!\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"L'anagrafica del cliente \\xE8 gi\\xE0 stata confermata in data:\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.state.selectedClient && this.state.selectedClient.filiali.lastModify)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Il codice identificativo assegnato \\xE8:\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \" \", this.state.selectedClient && this.state.selectedClient.codice))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleModalAlreadyConfirmed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(Modal, {\n      show: this.state.modalUnconfirmed,\n      onHide: this.handleModalUnconfirmed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Non Confermato!\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.state.selectedClient && React.createElement(\"form\", {\n      action: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"NAG\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.state.selectedClient.nag), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Nome di battesimo\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \" \", this.state.selectedClient.nome), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Data di nascita\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \" \", this.state.selectedClient.dataNascita), React.createElement(\"div\", {\n      className: \"form-check form-check-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input \",\n      type: \"checkbox\",\n      value: this.state.selectedClient.telefono,\n      id: \"telefono\",\n      name: \"telefono\",\n      onChange: e => {\n        this.handleChange(e.currentTarget);\n      },\n      checked: this.selectedClient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"telefono\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Numero di telefono\"), this.state.selectedClient.telefono)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-check form-check-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      value: this.state.selectedClient.email,\n      id: \"email\",\n      name: \"email\",\n      onChange: e => {\n        this.handleChange(e.currentTarget);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Email\"), this.state.selectedClient.email)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Privacy\"), [1, 2, 3, 4, 5, 6].map(privacyNumber => {\n      return React.createElement(\"div\", {\n        key: privacyNumber,\n        className: \"form-check form-check-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        id: \"id-\".concat(privacyNumber),\n        name: \"p\".concat(privacyNumber),\n        checked: this.state.selectedClient[\"p\".concat(privacyNumber)] ? \"checked\" : \"\",\n        onChange: e => {\n          this.handleChange(e.currentTarget, true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"p1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Privacy \", privacyNumber));\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-check form-check-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input \",\n      type: \"checkbox\",\n      value: this.state.selectedClient.firma,\n      id: \"firma\",\n      name: \"firma\",\n      onChange: e => {\n        this.handleChange(e.currentTarget);\n      },\n      checked: this.selectedClient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"telefono\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Firma\"), this.state.selectedClient.firma)))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleModalUnconfirmed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: e => {\n        this.handleConfirmCheckModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Conferma\"))), React.createElement(Modal, {\n      show: this.state.confirmCheckModalShow,\n      onHide: this.handleConfirmCheckModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Non Confermato!\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Sicuro di confermare?\")), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: e => {\n        this.handleConfirmCheckModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: e => {\n        this.handleConfirmCheckModal();\n        this.handleConfirm();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Conferma\")))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Gigabyte\\Desktop\\react-bcc\\react-bcc\\bcc-anagrafiche-feature-only_login\\bcc-anagrafiche-ui\\src\\anagrafica_components\\RicercaClienti.jsx"],"names":["React","Component","Modal","Button","Navbar","axios","UserTable","UserForm","UnconfirmedModalBody","config","RicercaClienti","state","modalDetailsVisible","modalDetailsUncofirmed","confirmCheckModalShow","modalAlreadyConfirmed","modalUnconfirmed","clients","selectedClient","checked","filiali","handleRicerca","data","jwt","localStorage","getItem","conf","headers","Authorization","params","get","apiClienteEndpoint","then","response","date","Date","lastModify","getFullYear","getMonth","getDate","setState","console","log","catch","error","handleModalDetailsUncofirmed","handleDetailsModalVisible","handleUnconfirmed","handleModalAlreadyConfirmed","handleModalUnconfirmed","checkClient","client","confermato","handleChange","input","isCheckbox","name","value","handleConfirmCheckModal","handleConfirm","post","apiPostCliente","id","telefono","email","p1","p2","p3","p4","p5","p6","firma","render","length","codice","handleSubmit","nag","nome","dataNascita","e","currentTarget","map","privacyNumber"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAO,MAAMC,cAAN,SAA6BT,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAC5CU,KAD4C,GACpC;AACNC,MAAAA,mBAAmB,EAAE,KADf;AAENC,MAAAA,sBAAsB,EAAE,KAFlB;AAGNC,MAAAA,qBAAqB,EAAE,KAHjB;AAINC,MAAAA,qBAAqB,EAAE,KAJjB;AAKNC,MAAAA,gBAAgB,EAAE,KALZ;AAMNC,MAAAA,OAAO,EAAE,EANH;AAONC,MAAAA,cAAc,EAAE,IAPV;AAQNC,MAAAA,OAAO,EAAE,KARH;AASNC,MAAAA,OAAO,EAAE;AATH,KADoC;;AAAA,SAa5CC,aAb4C,GAa3BC,IAAD,IAAU;AACxB,YAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,YAAMC,IAAI,GAAG;AACXC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAYL;AADpB,SADE;AAIXM,QAAAA,MAAM,EAAEP;AAJG,OAAb;AAMAjB,MAAAA,KAAK,CACFyB,GADH,CACOrB,MAAM,CAACsB,kBADd,EACkCL,IADlC,EAEGM,IAFH,CAESC,QAAD,IAAc;AAClB,YAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,QAAQ,CAACX,IAAT,CAAc,CAAd,EAAiBF,OAAjB,CAAyBgB,UAAlC,CAAX;AACAH,QAAAA,QAAQ,CAACX,IAAT,CAAc,CAAd,EAAiBF,OAAjB,CAAyBgB,UAAzB,GACEF,IAAI,CAACG,WAAL,KACA,GADA,IAECH,IAAI,CAACI,QAAL,KAAkB,CAFnB,IAGA,GAHA,GAIAJ,IAAI,CAACK,OAAL,EALF,CAFkB,CAQlB;;AACA,aAAKC,QAAL,CAAc;AAAEvB,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,aAAKuB,QAAL,CAAc;AAAEvB,UAAAA,OAAO,EAAEgB,QAAQ,CAACX;AAApB,SAAd;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAK/B,KAAL,CAAWM,OAAvB;AACD,OAdH,EAeG0B,KAfH,CAeUC,KAAD,IAAW;AAChB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OAlBH;AAmBD,KAxC2C;;AAAA,SA0C5CC,4BA1C4C,GA0Cb,MAAM;AACnC,WAAKL,QAAL,CAAc;AACZ3B,QAAAA,sBAAsB,EAAE,CAAC,KAAKF,KAAL,CAAWE;AADxB,OAAd;AAGD,KA9C2C;;AAAA,SAgD5CiC,yBAhD4C,GAgDhB,MAAM;AAChC,WAAKN,QAAL,CAAc;AAAE5B,QAAAA,mBAAmB,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAnC,OAAd;AACD,KAlD2C;;AAAA,SAoD5CmC,iBApD4C,GAoDxB,MAAM;AACxB,WAAKP,QAAL,CAAc;AAAEzB,QAAAA,qBAAqB,EAAE,KAAKJ,KAAL,CAAWI;AAApC,OAAd;AACD,KAtD2C;;AAAA,SAwD5CiC,2BAxD4C,GAwDd,MAAM;AAClC,WAAKR,QAAL,CAAc;AAAEzB,QAAAA,qBAAqB,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAArC,OAAd;AACD,KA1D2C;;AAAA,SA4D5CkC,sBA5D4C,GA4DnB,MAAM;AAC7B,WAAKT,QAAL,CAAc;AAAExB,QAAAA,gBAAgB,EAAE,CAAC,KAAKL,KAAL,CAAWK;AAAhC,OAAd;AACD,KA9D2C;;AAAA,SAgE5CkC,WAhE4C,GAgE7BC,MAAD,IAAY;AACxB,WAAKX,QAAL,CAAc;AAAEtB,QAAAA,cAAc,EAAEiC;AAAlB,OAAd;;AACA,UAAIA,MAAM,CAACC,UAAX,EAAuB;AACrB,aAAKZ,QAAL,CAAc;AAAEzB,UAAAA,qBAAqB,EAAE;AAAzB,SAAd;AACD,OAFD,MAEO;AACL,aAAKyB,QAAL,CAAc;AAAExB,UAAAA,gBAAgB,EAAE;AAApB,SAAd;AACD;AACF,KAvE2C;;AAAA,SAyE5CqC,YAzE4C,GAyE7B,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACpC,YAAMJ,MAAM,qBAAQ,KAAKxC,KAAL,CAAWO,cAAnB,CAAZ;;AACAuB,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAK,CAACE,IAAlB;;AACA,UAAID,UAAJ,EAAgB;AACdJ,QAAAA,MAAM,CAACG,KAAK,CAACE,IAAP,CAAN,GAAqBF,KAAK,CAACnC,OAA3B;AACD,OAFD,MAEO;AACLgC,QAAAA,MAAM,CAACG,KAAK,CAACE,IAAP,CAAN,GAAqBF,KAAK,CAACG,KAA3B;AACD;;AACDhB,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACA,WAAKX,QAAL,CAAc;AAAEtB,QAAAA,cAAc,EAAEiC;AAAlB,OAAd;AACD,KAnF2C;;AAAA,SAqF5CO,uBArF4C,GAqFlB,MAAM;AAC9B,WAAKlB,QAAL,CAAc;AAAE1B,QAAAA,qBAAqB,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAArC,OAAd;AACD,KAvF2C;;AAAA,SAyF5C6C,aAzF4C,GAyF5B,MAAM;AACpBtD,MAAAA,KAAK,CACFuD,IADH,CAEInD,MAAM,CAACoD,cAFX,EAGI;AACEC,QAAAA,EAAE,EAAE,KAAKnD,KAAL,CAAWO,cAAX,CAA0B4C,EADhC;AAEEC,QAAAA,QAAQ,EAAE,KAAKpD,KAAL,CAAWO,cAAX,CAA0B6C,QAFtC;AAGEC,QAAAA,KAAK,EAAE,KAAKrD,KAAL,CAAWO,cAAX,CAA0B8C,KAHnC;AAIEC,QAAAA,EAAE,EAAE,KAAKtD,KAAL,CAAWO,cAAX,CAA0B+C,EAJhC;AAKEC,QAAAA,EAAE,EAAE,KAAKvD,KAAL,CAAWO,cAAX,CAA0B+C,EALhC;AAMEE,QAAAA,EAAE,EAAE,KAAKxD,KAAL,CAAWO,cAAX,CAA0BiD,EANhC;AAOEC,QAAAA,EAAE,EAAE,KAAKzD,KAAL,CAAWO,cAAX,CAA0BkD,EAPhC;AAQEC,QAAAA,EAAE,EAAE,KAAK1D,KAAL,CAAWO,cAAX,CAA0BmD,EARhC;AASEC,QAAAA,EAAE,EAAE,KAAK3D,KAAL,CAAWO,cAAX,CAA0BoD,EAThC;AAUEC,QAAAA,KAAK,EAAE,KAAK5D,KAAL,CAAWO,cAAX,CAA0BqD;AAVnC,OAHJ,EAeI;AACE5C,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAEJ,YAAY,CAACC,OAAb,CAAqB,OAArB;AADR;AADX,OAfJ,EAqBGO,IArBH,CAqBSC,QAAD,IAAc,CAAE,CArBxB,EAsBGU,KAtBH,CAsBUC,KAAD,IAAW;AAChB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OAzBH;AA0BD,KApH2C;AAAA;;AAqH5C4B,EAAAA,MAAM,GAAG;AACP,WACE,0CACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAGE,oBAAC,QAAD;AAAU,MAAA,aAAa,EAAE,KAAKnD,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKG,KAAKV,KAAL,CAAWM,OAAX,CAAmBwD,MAAnB,GAA4B,CAA5B,IACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAE,KAAKvB,WADpB;AAEE,MAAA,OAAO,EAAE,KAAKvC,KAAL,CAAWM,OAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANJ,EAcE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWI,qBADnB;AAEE,MAAA,MAAM,EAAE,KAAKiC,2BAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CAJF,EAQE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKrC,KAAL,CAAWO,cAAX,IACC,KAAKP,KAAL,CAAWO,cAAX,CAA0BE,OAA1B,CAAkCgB,UAFtC,CAFF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEG,KAAKzB,KAAL,CAAWO,cAAX,IACC,KAAKP,KAAL,CAAWO,cAAX,CAA0BwD,MAH9B,CAFF,CARF,CARF,EAyBE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,OAAO,EAAE,KAAK1B,2BAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAzBF,CAdF,EAmDE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE,KAAKrC,KAAL,CAAWK,gBADnB;AAEE,MAAA,MAAM,EAAE,KAAKiC,sBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CAJF,EAQE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtC,KAAL,CAAWO,cAAX,IACC;AAAM,MAAA,MAAM,EAAE,KAAKyD,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKhE,KAAL,CAAWO,cAAX,CAA0B0D,GAA9B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,KAAKjE,KAAL,CAAWO,cAAX,CAA0B2D,IAA/B,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,KAAKlE,KAAL,CAAWO,cAAX,CAA0B4D,WAA/B,CANF,EAQE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKnE,KAAL,CAAWO,cAAX,CAA0B6C,QAHnC;AAIE,MAAA,EAAE,EAAC,UAJL;AAKE,MAAA,IAAI,EAAC,UALP;AAME,MAAA,QAAQ,EAAGgB,CAAD,IAAO;AACf,aAAK1B,YAAL,CAAkB0B,CAAC,CAACC,aAApB;AACD,OARH;AASE,MAAA,OAAO,EAAE,KAAK9D,cAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEG,KAAKP,KAAL,CAAWO,cAAX,CAA0B6C,QAF7B,CAZF,CARF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,EA0BE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKpD,KAAL,CAAWO,cAAX,CAA0B8C,KAHnC;AAIE,MAAA,EAAE,EAAC,OAJL;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,QAAQ,EAAGe,CAAD,IAAO;AACf,aAAK1B,YAAL,CAAkB0B,CAAC,CAACC,aAApB;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEG,KAAKrE,KAAL,CAAWO,cAAX,CAA0B8C,KAF7B,CAZF,CA1BF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA5CF,EA6CG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmBiB,GAAnB,CAAwBC,aAAD,IAAmB;AACzC,aACE;AACE,QAAA,GAAG,EAAEA,aADP;AAEE,QAAA,SAAS,EAAC,+BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,EAAE,eAAQA,aAAR,CAHJ;AAIE,QAAA,IAAI,aAAMA,aAAN,CAJN;AAKE,QAAA,OAAO,EACL,KAAKvE,KAAL,CAAWO,cAAX,YAA8BgE,aAA9B,KACI,SADJ,GAEI,EARR;AAUE,QAAA,QAAQ,EAAGH,CAAD,IAAO;AACf,eAAK1B,YAAL,CAAkB0B,CAAC,CAACC,aAApB,EAAmC,IAAnC;AACD,SAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAkBE;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAoC,QAAA,OAAO,EAAC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWE,aADX,CAlBF,CADF;AAwBD,KAzBA,CA7CH,EAuEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvEF,EAwEE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKvE,KAAL,CAAWO,cAAX,CAA0BqD,KAHnC;AAIE,MAAA,EAAE,EAAC,OAJL;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,QAAQ,EAAGQ,CAAD,IAAO;AACf,aAAK1B,YAAL,CAAkB0B,CAAC,CAACC,aAApB;AACD,OARH;AASE,MAAA,OAAO,EAAE,KAAK9D,cAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEG,KAAKP,KAAL,CAAWO,cAAX,CAA0BqD,KAF7B,CAZF,CAxEF,CADF,CAFJ,CADF,CARF,EA0GE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAKtB,sBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,OAAO,EAAG8B,CAAD,IAAO;AACd,aAAKrB,uBAAL;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CA1GF,CAnDF,EA2KE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE,KAAK/C,KAAL,CAAWG,qBADnB;AAEE,MAAA,MAAM,EAAE,KAAK4C,uBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CAJF,EAQE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CARF,EAWE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,OAAO,EAAGqB,CAAD,IAAO;AACd,aAAKrB,uBAAL;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EASE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,SADV;AAEE,MAAA,OAAO,EAAGqB,CAAD,IAAO;AACd,aAAKrB,uBAAL;AACA,aAAKC,aAAL;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CAXF,CA3KF,CADF,CADF;AA+MD;;AArU2C","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport Navbar from \"./common/Navbar\";\r\nimport axios from \"axios\";\r\nimport UserTable from \"./userTable\";\r\nimport UserForm from \"./userForm\";\r\nimport UnconfirmedModalBody from \"./unconfiremdModalBody\";\r\nimport config from \"../config.json\";\r\nexport class RicercaClienti extends Component {\r\n  state = {\r\n    modalDetailsVisible: false,\r\n    modalDetailsUncofirmed: false,\r\n    confirmCheckModalShow: false,\r\n    modalAlreadyConfirmed: false,\r\n    modalUnconfirmed: false,\r\n    clients: [],\r\n    selectedClient: null,\r\n    checked: false,\r\n    filiali: [],\r\n  };\r\n\r\n  handleRicerca = (data) => {\r\n    const jwt = localStorage.getItem(\"TOKEN\");\r\n    const conf = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      params: data,\r\n    };\r\n    axios\r\n      .get(config.apiClienteEndpoint, conf)\r\n      .then((response) => {\r\n        var date = new Date(response.data[0].filiali.lastModify);\r\n        response.data[0].filiali.lastModify =\r\n          date.getFullYear() +\r\n          \"-\" +\r\n          (date.getMonth() + 1) +\r\n          \"-\" +\r\n          date.getDate();\r\n        //da togliere stati duplicati\r\n        this.setState({ clients: [] });\r\n        this.setState({ clients: response.data });\r\n        console.log(this.state.clients);\r\n      })\r\n      .catch((error) => {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleModalDetailsUncofirmed = () => {\r\n    this.setState({\r\n      modalDetailsUncofirmed: !this.state.modalDetailsUncofirmed,\r\n    });\r\n  };\r\n\r\n  handleDetailsModalVisible = () => {\r\n    this.setState({ modalDetailsVisible: !this.state.modalDetailsVisible });\r\n  };\r\n\r\n  handleUnconfirmed = () => {\r\n    this.setState({ modalAlreadyConfirmed: this.state.modalAlreadyConfirmed });\r\n  };\r\n\r\n  handleModalAlreadyConfirmed = () => {\r\n    this.setState({ modalAlreadyConfirmed: !this.state.modalAlreadyConfirmed });\r\n  };\r\n\r\n  handleModalUnconfirmed = () => {\r\n    this.setState({ modalUnconfirmed: !this.state.modalUnconfirmed });\r\n  };\r\n\r\n  checkClient = (client) => {\r\n    this.setState({ selectedClient: client });\r\n    if (client.confermato) {\r\n      this.setState({ modalAlreadyConfirmed: true });\r\n    } else {\r\n      this.setState({ modalUnconfirmed: true });\r\n    }\r\n  };\r\n\r\n  handleChange = (input, isCheckbox) => {\r\n    const client = { ...this.state.selectedClient };\r\n    console.log(input.name);\r\n    if (isCheckbox) {\r\n      client[input.name] = input.checked;\r\n    } else {\r\n      client[input.name] = input.value;\r\n    }\r\n    console.log(client);\r\n    this.setState({ selectedClient: client });\r\n  };\r\n\r\n  handleConfirmCheckModal = () => {\r\n    this.setState({ confirmCheckModalShow: !this.state.confirmCheckModalShow });\r\n  };\r\n\r\n  handleConfirm = () => {\r\n    axios\r\n      .post(\r\n        config.apiPostCliente,\r\n        {\r\n          id: this.state.selectedClient.id,\r\n          telefono: this.state.selectedClient.telefono,\r\n          email: this.state.selectedClient.email,\r\n          p1: this.state.selectedClient.p1,\r\n          p2: this.state.selectedClient.p1,\r\n          p3: this.state.selectedClient.p3,\r\n          p4: this.state.selectedClient.p4,\r\n          p5: this.state.selectedClient.p5,\r\n          p6: this.state.selectedClient.p6,\r\n          firma: this.state.selectedClient.firma,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"TOKEN\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {})\r\n      .catch((error) => {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"main\">\r\n          <Navbar></Navbar>\r\n          <h3 className=\" mt-2\">RICERCA CLIENTI</h3>\r\n          <UserForm handleRicerca={this.handleRicerca} />\r\n\r\n          {this.state.clients.length > 0 && (\r\n            <div className=\"row\">\r\n              <UserTable\r\n                checkClient={this.checkClient}\r\n                clients={this.state.clients}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <Modal\r\n            show={this.state.modalAlreadyConfirmed}\r\n            onHide={this.handleModalAlreadyConfirmed}\r\n          >\r\n            <Modal.Header>\r\n              {\" \"}\r\n              <h3>Attenzione!</h3>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>\r\n                L'anagrafica del cliente è già stata confermata in data:\r\n                <b>\r\n                  {this.state.selectedClient &&\r\n                    this.state.selectedClient.filiali.lastModify}\r\n                </b>\r\n              </p>\r\n              <p>\r\n                Il codice identificativo assegnato è:\r\n                <b>\r\n                  {\" \"}\r\n                  {this.state.selectedClient &&\r\n                    this.state.selectedClient.codice}\r\n                </b>\r\n              </p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={this.handleModalAlreadyConfirmed}\r\n              >\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          {/*unconfirmed*/}\r\n\r\n          <Modal\r\n            show={this.state.modalUnconfirmed}\r\n            onHide={this.handleModalUnconfirmed}\r\n          >\r\n            <Modal.Header>\r\n              {\" \"}\r\n              <h3>Non Confermato!</h3>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"row\">\r\n                {this.state.selectedClient && (\r\n                  <form action={this.handleSubmit}>\r\n                    <div className=\"container-fluid\">\r\n                      <h5>NAG</h5>\r\n                      <p>{this.state.selectedClient.nag}</p>\r\n                      <h5>Nome di battesimo</h5>\r\n                      <p> {this.state.selectedClient.nome}</p>\r\n                      <h5>Data di nascita</h5>\r\n                      <p> {this.state.selectedClient.dataNascita}</p>\r\n\r\n                      <div className=\"form-check form-check-wrapper\">\r\n                        <input\r\n                          className=\"form-check-input \"\r\n                          type=\"checkbox\"\r\n                          value={this.state.selectedClient.telefono}\r\n                          id=\"telefono\"\r\n                          name=\"telefono\"\r\n                          onChange={(e) => {\r\n                            this.handleChange(e.currentTarget);\r\n                          }}\r\n                          checked={this.selectedClient}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"telefono\">\r\n                          <h5>Numero di telefono</h5>\r\n                          {this.state.selectedClient.telefono}\r\n                        </label>\r\n                      </div>\r\n                      <br />\r\n                      <div className=\"form-check form-check-wrapper\">\r\n                        <input\r\n                          className=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          value={this.state.selectedClient.email}\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          onChange={(e) => {\r\n                            this.handleChange(e.currentTarget);\r\n                          }}\r\n                        />\r\n\r\n                        <label className=\"form-check-label\" htmlFor=\"email\">\r\n                          <h5>Email</h5>\r\n                          {this.state.selectedClient.email}\r\n                        </label>\r\n                      </div>\r\n                      <br />\r\n                      <h5>Privacy</h5>\r\n                      {[1, 2, 3, 4, 5, 6].map((privacyNumber) => {\r\n                        return (\r\n                          <div\r\n                            key={privacyNumber}\r\n                            className=\"form-check form-check-wrapper\"\r\n                          >\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              id={`id-${privacyNumber}`}\r\n                              name={`p${privacyNumber}`}\r\n                              checked={\r\n                                this.state.selectedClient[`p${privacyNumber}`]\r\n                                  ? \"checked\"\r\n                                  : \"\"\r\n                              }\r\n                              onChange={(e) => {\r\n                                this.handleChange(e.currentTarget, true);\r\n                              }}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"p1\">\r\n                              Privacy {privacyNumber}\r\n                            </label>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                      <br />\r\n                      <div className=\"form-check form-check-wrapper\">\r\n                        <input\r\n                          className=\"form-check-input \"\r\n                          type=\"checkbox\"\r\n                          value={this.state.selectedClient.firma}\r\n                          id=\"firma\"\r\n                          name=\"firma\"\r\n                          onChange={(e) => {\r\n                            this.handleChange(e.currentTarget);\r\n                          }}\r\n                          checked={this.selectedClient}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"telefono\">\r\n                          <h5>Firma</h5>\r\n                          {this.state.selectedClient.firma}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                )}\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.handleModalUnconfirmed}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={(e) => {\r\n                  this.handleConfirmCheckModal();\r\n                }}\r\n              >\r\n                Conferma\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          <Modal\r\n            show={this.state.confirmCheckModalShow}\r\n            onHide={this.handleConfirmCheckModal}\r\n          >\r\n            <Modal.Header>\r\n              {\" \"}\r\n              <h3>Non Confermato!</h3>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"row\">Sicuro di confermare?</div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={(e) => {\r\n                  this.handleConfirmCheckModal();\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={(e) => {\r\n                  this.handleConfirmCheckModal();\r\n                  this.handleConfirm();\r\n                }}\r\n              >\r\n                Conferma\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}